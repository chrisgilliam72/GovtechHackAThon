@model RegistrationTeam
@inject GovtechHackAthon.Services.DBLookupService DBLookupService
@using GovtechHackAthon.Helpers
@{
    ViewData["Title"] = "Teams";
}

@using (Html.BeginForm("TeamsSubmitted", "Registration"))
{
    <br />
    <div class="row">
        <div class="col-md-5">
            <div class="card shadow">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div>
                                <img src="~/images/sidelogo.png" class="img-fluid" /><br />
                                <text style="color:orangered">
                                    <b> Team members details!</b>
                                </text>
                            </div>
                        </div>
                        <div class="border-left"></div>
                        <div class="col-md-5">
                            <br />

                            <p>
                                The purpose of this section is for you to enter the details of the team members whom you will be collaborating with on the GovtechHackathon project.
                            </p>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12">

            <div class="card shadow overflow-auto">
                <div class="card-header-case shadow-sm cardbanner50px" style="background-color:mintcream">
                    <p>
                        <i class="fa fa-info-circle fa-lg teams-style"></i>
                        <text class="teams-style">
                            Team Members
                        </text>
                    </p>
                </div>
                <div class="card-body">
                    <div>
                        <div class="text-capitalize teams-style font-weight-bold">
                            team leader : <i class="fa fa-user-circle fa-lg"></i>
                            @Html.DisplayFor(m => m.Leader.RegistrationData.FullName)
                            @Html.HiddenFor(m => m.Leader.RegistrationData.FullName)
                            @Html.HiddenFor(x => x.IndexToDelete)
                            <br />
                        </div>
                    </div>
                    <div id="divTeamTableData">
                        <div class="row">
                            <div class="col">
                                <table class="table table-responsive table-striped table-bordered" id="tableTeamLst">
                                    <thead class="table bg-light">
                                        <tr>
                                            <th scope="col">#</th>
                                            <th scope="col">First Name</th>
                                            <th scope="col">Surname</th>
                                            <th scope="col">Email</th>
                                            <th scope="col">Student</th>
                                            <th scope="col">Contact Number</th>
                                            <th scope="col">Gender</th>
                                            <th scope="col">Race</th>
                                            <th scope="col">Country</th>
                                            <th scope="col">City</th>
                                            <th scope="col">Province</th>
                                            <th scope="col">ID</th>
                                            <th scope="col">DateofBirth</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{

                                            var races = new SelectList(DBLookupService.GetRaces(), "PkId", "Name");
                                            var genders = new SelectList(DBLookupService.GetGenders(), "PkId", "Name");
                                            var provinces = new SelectList(DBLookupService.GetProvinces(), "PkId", "Name");
                                            var countries = DBLookupService.GetCountries();
                                            var teamMemberCount = Model.Members.Count;

                                            var pkIDSouthAfrica = countries.FirstOrDefault(x => x.Name == "South Africa").PkId;
                                            for (int i = 0; i < teamMemberCount; i++)
                                            {

                                                var modelDeleteID = "modalDelete" + i;
                                                var delBtnID = "btnDelTeamMember" + i;
                                                var drpDownID = "drpDwnCountry" + i;
                                                var cityID = "divCity" + i;
                                                var provinceID = "divProv" + i;
                                                var IdentityID = "divID" + i;
                                                var DOBID = "divDOB" + i;
                                                if (Model.Members[i].CountryID == 0)
                                                    Model.Members[i].CountryID = pkIDSouthAfrica;
                                                <tr>
                                                    <td>

                                                        @Html.DisplayFor(m => Model.Members[i].Index)
                                                        @Html.HiddenFor(m => Model.Members[i].Index)

                                                    </td>
                                                    <td>
                                                        <div>
                                                            @Html.TextBoxFor(m => Model.Members[i].FirstName, "", new { @Class = "form-control-Fullname" })
                                                        </div>
                                                        <div>
                                                            @Html.ValidationMessageFor(m => Model.Members[i].FirstName, "", new { @Class = "text-danger" })
                                                        </div>
                                                    </td>

                                                    <td>
                                                        <div>
                                                            @Html.TextBoxFor(m => Model.Members[i].Surname, null, new { @Class = "form-control-Fullname" })
                                                        </div>
                                                        <div>
                                                            @Html.ValidationMessageFor(m => Model.Members[i].Surname, "", new { @Class = "text-danger" })
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div>
                                                            @Html.TextBoxFor(m => Model.Members[i].Email, new { Type = "email", @Class = "form-control-textfields" })
                                                        </div>
                                                        <div>
                                                            @Html.ValidationMessageFor(m => Model.Members[i].Email, "", new { @Class = "text-danger" })
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div>
                                                            @Html.CheckBoxFor(m => Model.Members[i].IsStudent, null)
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div>
                                                            @Html.TextBoxFor(m => Model.Members[i].PhoneNumber, null, new { @Class = "form-control-Contact" })
                                                        </div>
                                                        <div>
                                                            @Html.ValidationMessageFor(m => Model.Members[i].PhoneNumber, "", new { @Class = "text-danger" })
                                                        </div>
                                                    </td>

                                                    <td>
                                                        <div>
                                                            @Html.DropDownListFor(m => Model.Members[i].GenderID, genders, "Gender", new { @Class = "form-control-Gender" })
                                                        </div>
                                                        <div>
                                                            @Html.ValidationMessageFor(m => Model.Members[i].GenderID, "", new { @Class = "text-danger" })
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div>
                                                            @Html.DropDownListFor(m => Model.Members[i].RaceID, races, "Race", new { @Class = "form-control-Gender" })
                                                        </div>
                                                        <div>
                                                            @Html.ValidationMessageFor(m => Model.Members[i].RaceID, "", new { @Class = "text-danger" })
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div>
                                                            @Html.DropDownListFor(x => Model.Members[i].CountryID, new SelectList(DBLookupService.GetCountries(), "PkId", "Name"), new { @Class = "form-control-Fullname", id = drpDownID })
                                                        </div>
                                                        <div>
                                                            @Html.ValidationMessageFor(m => Model.Members[i].CountryID, "", new { @Class = "text-danger" })
                                                        </div>
                                                    </td>
                                                    <td>
                                                        <div class="@(Model.Members[i].CountryID == pkIDSouthAfrica ? "d-block" : "d-none")" ID=@cityID>
                                                            <div>
                                                                @Html.TextBoxFor(m => Model.Members[i].City, null, new { ID = cityID, @Class = "form-control-City" })
                                                            </div>
                                                            <div>
                                                                @Html.ValidationMessageFor(m => Model.Members[i].City, "", new { @Class = "text-danger" })
                                                            </div>
                                                        </div>

                                                    </td>
                                                    <td>
                                                        <div class="@(Model.Members[i].CountryID == pkIDSouthAfrica ? "d-block" : "d-none")" ID=@provinceID>
                                                            <div>
                                                                @Html.DropDownListFor(m => Model.Members[i].ProvinceID, provinces, "Province", new { @Class = "form-control-Province" })
                                                            </div>
                                                            <div>
                                                                @Html.ValidationMessageFor(m => Model.Members[i].ProvinceID, "", new { @Class = "text-danger" })
                                                            </div>
                                                        </div>

                                                    </td>
                                                    <td>
                                                        <div class="@(Model.Members[i].CountryID == pkIDSouthAfrica ? "d-block" : "d-none")" ID=@IdentityID>
                                                            <div>
                                                                @Html.TextBoxFor(m => Model.Members[i].ID, null, new { @Class = "form-control-ID" })
                                                            </div>
                                                            <div>
                                                                @Html.ValidationMessageFor(m => Model.Members[i].ID, "", new { @Class = "text-danger" })
                                                            </div>
                                                        </div>
                                                    <td>
                                                        <div class="@(Model.Members[i].CountryID == pkIDSouthAfrica ? " d-none" : "d-block")" ID=@DOBID>
                                                            <div>
                                                                @Html.EditorFor(m => Model.Members[i].DateOfBirth, null, new { type = "date" })
                                                            </div>
                                                            <div>
                                                                @Html.ValidationMessageFor(m => Model.Members[i].DateOfBirth, "", new { @Class = "text-danger" })
                                                            </div>
                                                        </div>

                                                    </td>
                                                    <td>
                                                        @if (Model.MemberCount > 2)
                                                        {
                                                            <button class="btnSubmit btn-trash" type="button" data-toggle="modal" data-target="#@modelDeleteID"><i class="far fa-trash-alt fa-lg"></i> </button>
                                                        }
                                                        else
                                                        {
                                                            <button class="btnSubmit btn-trash" type="button" disabled><i class="far fa-trash-alt fa-lg"></i> </button>
                                                        }
                                                        <div class="modal fade" id="@modelDeleteID" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                                                            <div class="modal-dialog modal-dialog-centered" role="document">
                                                                <div class="modal-content">
                                                                    <div class="modal-header text-color">
                                                                        <div class="modal-title" id="exampleModalLongTitle"><i class="fa fa-trash" aria-hidden="true">&nbsp;</i>Confirm Delete</div>
                                                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                            <span aria-hidden="true">&times;</span>
                                                                        </button>
                                                                    </div>
                                                                    <div class="modal-body">
                                                                        Are you sure you want to remove this team member ?
                                                                    </div>
                                                                    <div class="modal-footer bg-modal-footer">
                                                                        <button type="button" class="btn-default  btn-sm  button-cancel" data-dismiss="modal" onclick="myFunction()">Cancel</button>
                                                                        <button type="submit" id="@delBtnID" name="btnUpdate" class="btn button-next  btn-sm btnSubmit float-right" formnovalidate value="Delete">Delete</button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            }
                                        }

                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col">
                            @if (Model.MemberCount < 4)
                            {
                                <input type="submit" id="AddTeamMember" name="btnUpdate" class="btn  button-dashboard btn-sm btnSubmit float-right" formnovalidate value="Add Team Member" />
                            }
                            else
                            {
                                <input type="submit" class="btn  button-dashboard btn-sm btnSubmit float-right" value="Add Team Member" disabled>
                            }

                        </div>
                    </div>
                </div>



                <div class="card-footer cardbanner60px">
                    <div class="float-right">
                        <label>Step 04 Of 06 </label>
                        <input type="submit" name="btnUpdate" value="Next" class="btn button-next" />
                    </div>
                </div>
            </div>

        </div>
    </div>
}
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script type="text/javascript">

        $(document).ready(function () {

            $(" #drpDwnCountry0,#drpDwnCountry1,#drpDwnCountry2, #drpDwnCountry3,#drpDwnCountry4").change(function (e) {

                var lastChar = this.id[this.id.length - 1];
                var cityDIVID = "#divCity" + lastChar;
                var provinceDIVID = "#divProv" + lastChar;
                var IDDIVID = "#divID" + lastChar;
                var dobID = "#divDOB" + lastChar;
                var selectedText = $(this).find("option:selected").text();
                if (selectedText == "South Africa") {
                    $(cityDIVID).removeClass("d-none");
                    $(cityDIVID).addClass("d-block");
                    $(provinceDIVID).removeClass("d-none");
                    $(provinceDIVID).show().addClass("d-block");
                    $(IDDIVID).removeClass("d-none");
                    $(IDDIVID).show().addClass("d-block")
                    $(dobID).removeClass("d-block");
                    $(dobID).hide().addClass("d-none");
                }
                else {
                    $(cityDIVID).removeClass("d-block");
                    $(cityDIVID).addClass("d-none");
                    $(provinceDIVID).removeClass("d-block");
                    $(provinceDIVID).hide().addClass("d-none");
                    $(IDDIVID).removeClass("d-block");
                    $(IDDIVID).hide().addClass("d-none");
                    $(dobID).removeClass("d-none");
                    $(dobID).show().addClass("d-block")
                }
            });
        });


        $(document).on('click', '#btnDelTeamMember0', function (e) {
            document.getElementById('IndexToDelete').value = "1";
        });

        $(document).on('click', '#btnDelTeamMember1', function (e) {
            document.getElementById('IndexToDelete').value = "2";
        });

        $(document).on('click', '#btnDelTeamMember2', function (e) {
            document.getElementById('IndexToDelete').value = "3";
        });

        $(document).on('click', '#btnDelTeamMember3', function (e) {
            document.getElementById('IndexToDelete').value = "4";
        });
    </script>
}
